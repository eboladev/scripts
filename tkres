#!/bin/sh
# -*- Mode: Tcl -*-
#
# Name		tkres
# Decription	Dump the resource tree for a running Tk application
# Syntax	tkres { -l | application_name }
# Version	$Id: tkres,v 1.3 2001/06/03 22:31:04 polster Exp $
#
# \
exec wish "$0" -- ${1+"$@"}

proc dumpRes {app name win} {
    if [catch {set cl [send -- $app $win configure]} err] {
	puts stderr "tkres: Error: $err"
	exit 1
    }
    if {$win == "."} {set dot ""} else {set dot "."}
    foreach q $cl {
	puts "$name$win$dot[lindex $q 1]:\t[lindex $q 4]"
    }
    foreach child [send -- $app winfo children $win] {
	dumpRes $app $name $child
    }
}

global argc argv
set usage "tkres: Usage: tkres \{ -l | application_name \}"

wm withdraw .

switch -exact -- [lindex $argv 0] {
    "-l" - "--list" {
	foreach interp [winfo interps] {puts $interp}
	exit 0
    }
    "-h" - "--help" - "" {
	puts stderr $usage
	exit 1
    }
}

puts [winfo name .]
pack [button .b -text zizi]

set app [lindex $argv 0]
if [catch {set name [send -- $app winfo name .]} err] {
    puts stderr "tkres: Error: $err"
    exit 1
}

dumpRes $app $name .
exit 0

#
# End		tkres
#
