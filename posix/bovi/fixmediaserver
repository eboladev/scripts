#!/bin/bash
#
# Stop mediaserver, unmount music directory, re-create 100 random tracks,
# re-mount and restart.

# set -x

PATH=/sbin:/bin:/usr/bin:/usr/sbin
RANDOM=$((`date +%s` % 32768))
allTracks=/tmp/randomtracks.$$

cd /home/polster/Documents/music || exit 1
mkdir -p random
rm -f random/* 2>/dev/null

find . -type f | egrep -v '^random' | egrep '\.(ogg|wav|flac|mp3)$' > $allTracks
numTracks=`wc -l < $allTracks`
if [[ $numTracks == 0 ]]; then
	rm -r $allTracks
	exit 1
fi

# Stop and unmount

service mediatomb stop >/dev/null 2>&1
# service mediaserver stop >/dev/null 2>&1
killall twonkymedia >/dev/null 2>&1
killall -9 twonkymedia >/dev/null 2>&1
umount /var/opt/twonky/media/music || (
	set -- `ps -ef | grep python | grep convertfs`
	if [ "$2" != "" ]; then
		kill "$2"
		sleep 1
	fi
	set -- `ps -ef | grep python | grep convertfs`
	if [ "$2" != "" ]; then
		kill -9 "$2"
		sleep 1
	fi
)
rm -rf /var/opt/twonky/twonkymedia.db/* /var/run/mediaserver.pid

# Ensure music folder is readable for all

chmod -R a+xr * &

# Generate random tracks

i=0
tracks=""
while true; do
	rnd=$((RANDOM * RANDOM % numTracks + 1))
	dupe=0
        for t in $tracks; do
		if [[ $t == $rnd ]]; then
			dupe=1
			break
		fi
	done
	if [[ $dupe == 0 ]]; then
		tracks="$rnd $tracks"
		i=$((i + 1))
	fi
	if [[ $i == 100 ]]; then
		break;
	fi
done

i=0
for t in $tracks; do
	file=`head -$t $allTracks | tail -1`
        if [ "$file" == "" ]; then
		continue
	fi
        newName=`echo "${file#*/*/}" | sed 's|/| - |g'`
        newName=`printf "%2.2d " $i`"$newName"
        ln -f "$file" "random/$newName"
	chown -R polster:polster random
	chmod -R a+r random
	i=$((i + 1))
done

rm -f $allTracks

# Mount and start
nice -n -5 /usr/local/bin/convertfs.py /var/opt/twonky/media/music \
	-oroot=/mnt/maxtor/polster/music,allow_other
# service mediaserver start >/dev/null 2>&1
service mediatomb start >/dev/null 2>&1

